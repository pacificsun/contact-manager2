{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","id","payload","map","contact","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onClickDelete","a","delete","name","email","address","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","phone","errors","e","target","onSubmit","preventDefault","newContacts","uuid","post","history","push","names","EditContact","updContact","match","params","put","header","branding","href","Test","title","body","fetch","then","response","json","App","Header","exact","path","component","About","PageNotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b926dbd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state /*suru ma bahira nikalera ani tesmathi operation garna*/,\n        contacts: state.contacts.filter(\n          contacts => contacts.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state /*suru ma bahira nikalera ani tesmathi operation garna*/,\n        contacts: [action.payload, ...state.contacts] /*??*/\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onClickDelete = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, address } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    });\n                  }}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Address: {address}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteClickHandler: PropTypes.func.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport {Consumer} from \"../../context\";\n\nclass Contacts extends Component {\n\n  render() {\n\n    return (\n\n        <Consumer>\n\n            { value =>{\n              const {contacts} = value;\n              return(\n                  <React.Fragment> {/*div is replaced by that part*/}\n                    <h1 className=\"display-4 mb-2\">\n                      <span className=\"text-danger\">Contact</span> List\n                    </h1>\n                      {contacts.map(contact => (\n                          <Contact\n                              key={contact.id}\n                              contact={contact}\n\n                          />\n                      ))}\n                  </React.Fragment>\n                  )\n              }\n            }\n\n        </Consumer>\n    );\n\n\n  }\n}\n\nexport default Contacts;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return(\n        \n    <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n            type={type}\n            name={name}\n            className={classnames(\"form-control form-control-lg\", {\n                'is-invalid':error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange = {onChange}\n          \n            />\n\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n\n    </div>\n\n    )\n}\nTextInputGroup.propTypes ={\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type:'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //check for the errors\n\n    if (name === \"\") {\n      this.setState({ name: \"Name is required\" });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ email: \"Email is required\" });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ phone: \"Phone is required\" });\n      return;\n    }\n\n    const newContacts = {\n      id: uuid(),\n      name /*using ES6 , it's like name:name  */,\n      email,\n      phone\n    };\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContacts\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.names}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //check for the errors\n\n    if (name === \"\") {\n      this.setState({ name: \"Name is required\" });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ email: \"Email is required\" });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ phone: \"Phone is required\" });\n      return;\n    }\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.names}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"/>\n                Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"/>\n                Add \n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"/>\n                About\n              </Link>\n            </li>\n            \n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default header;","import React from 'react';\n\nexport default () =>{\n\n    return(\n        <div>\n            <h1 className=\"display-4\">About Contact-Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version1.0.0</p>\n        </div>\n    )\n\n}\n","import React from 'react'\n\nexport default () => {\n    \n    return(\n        <div>\n            <h1 className=\"display-4\">\n                <span className=\"text-danger\">404</span>\n             Page Not Found\n            </h1>\n            <p className=\"lead\">Srrory, that page does not exit </p>\n        </div>\n    )\n}","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n  render() {\n    return <h1>HI</h1>;\n  }\n}\n\nexport default Test;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport { Provider } from \"./context\";\nimport PageNotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div>\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}